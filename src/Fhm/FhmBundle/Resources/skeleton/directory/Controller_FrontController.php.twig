<?php
namespace {{ namespace }}\Controller\{{ directory|capitalize }};

{% block use_statements %}
use Fhm\FhmBundle\Controller\RefFrontController as FhmController;
use {{ namespace }}\Document\{{ document }};
use Symfony\Component\HttpFoundation\Request;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;
{% endblock use_statements %}

{% block class_definition %}
/**
 * @Route("/{{ route[1] }}{{ directory }}")
 */
class FrontController extends FhmController
{% endblock class_definition %}
{
{% block class_body %}
    /**
     * Constructor
     */
    public function __construct()
    {
        parent::__construct('{{ src }}', '{{ route[1]|capitalize }}', '{{ route[1] }}_{{ directory }}', '{{ document }}');
        $this->form->type->create = '{{ src }}\\{{ route[1]|capitalize }}Bundle\\Form\\Type\\Front\\{{ directory|capitalize }}\\CreateType';
        $this->form->type->update = '{{ src }}\\{{ route[1]|capitalize }}Bundle\\Form\\Type\\Front\\{{ directory|capitalize }}\\UpdateType';
        $this->translation        = array('{{ bundle }}', '{{ route[1] }}.{{ directory }}');
    }

    /**
     * @Route
     * (
     *      path="/",
     *      name="{{ route[0] }}_{{ route[1] }}_{{ directory }}"
     * )
     * @Template("::{{ basename }}/Front/{{ directory|capitalize }}/index.html.twig")
     */
    public function indexAction()
    {
        return parent::indexAction();
    }

    /**
     * @Route
     * (
     *      path="/create",
     *      name="{{ route[0] }}_{{ route[1] }}_{{ directory }}_create"
     * )
     * @Template("::{{ basename }}/Front/{{ directory|capitalize }}/create.html.twig")
     */
    public function createAction(Request $request)
    {
        // For activate this route, delete next line
        throw $this->createNotFoundException($this->get('translator')->trans('fhm.error.route', array(), 'FhmFhmBundle'));

        return parent::createAction($request);
    }

    /**
    * @Route
    * (
    *      path="/duplicate/{id}",
    *      name="{{ route[0] }}_{{ route[1] }}_{{ directory }}_duplicate",
    *      requirements={"id"="[a-z0-9]*"}
    * )
    * @Template("::{{ basename }}/Front/{{ directory|capitalize }}/create.html.twig")
    */
    public function duplicateAction(Request $request, $id)
    {
        // For activate this route, delete next line
        throw $this->createNotFoundException($this->get('translator')->trans('fhm.error.route', array(), 'FhmFhmBundle'));

        return parent::duplicateAction($request, $id);
    }

    /**
    * @Route
    * (
    *      path="/update/{id}",
    *      name="{{ route[0] }}_{{ route[1] }}_{{ directory }}_update",
    *      requirements={"id"="[a-z0-9]*"}
    * )
    * @Template("::{{ basename }}/Front/{{ directory|capitalize }}/update.html.twig")
    */
    public function updateAction(Request $request, $id)
    {
        // For activate this route, delete next line
        throw $this->createNotFoundException($this->get('translator')->trans('fhm.error.route', array(), 'FhmFhmBundle'));

        return parent::updateAction($request, $id);
    }

    /**
    * @Route
    * (
    *      path="/detail/{id}",
    *      name="{{ route[0] }}_{{ route[1] }}_{{ directory }}_detail",
    *      requirements={"id"=".+"}
    * )
    * @Template("::{{ basename }}/Front/{{ directory|capitalize }}/detail.html.twig")
    */
    public function detailAction($id)
    {
        return parent::detailAction($id);
    }

    /**
    * @Route
    * (
    *      path="/delete/{id}",
    *      name="{{ route[0] }}_{{ route[1] }}_{{ directory }}_delete",
    *      requirements={"id"="[a-z0-9]*"}
    * )
    */
    public function deleteAction($id)
    {
        // For activate this route, delete next line
        throw $this->createNotFoundException($this->get('translator')->trans('fhm.error.route', array(), 'FhmFhmBundle'));

        return parent::deleteAction($id);
    }

    /**
    * @Route
    * (
    *      path="/{id}",
    *      name="{{ route[0] }}_{{ route[1] }}_{{ directory }}_lite",
    *      requirements={"id"=".+"}
    * )
    * @Template("::{{ basename }}/Front/{{ directory|capitalize }}/detail.html.twig")
    */
    public function liteAction($id)
    {
        return $this->detailAction($id);
    }
{% endblock class_body %}
}