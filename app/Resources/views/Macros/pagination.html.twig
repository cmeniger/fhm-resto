{# PAGINATION - Afficher #}
{% macro print(pagination, media, idData, idPagination) %}
    {% import _self as this %}
    {% if pagination and pagination.max > 0 %}
        {# Front #}
        {% if pagination.section == 'Front' %}
            <div class="row" id="{{ idPagination ? idPagination : pagination.idPagination }}">
                <ul class="pagination" data-path="{{ pagination.path }}" data-post="{{ pagination.post }}" data-tag="{{ pagination.tag }}" data-id-data="{{ idData ? idData : pagination.idData }}" data-id-pagination="{{ idPagination ? idPagination : pagination.idPagination }}">
                    {{ this.printAddPrevious(pagination, media, idData, idPagination) }}
                    {% for data in pagination.datas %}
                        {{ this.printAdd(pagination, media, data, idData, idPagination) }}
                    {% endfor %}
                    {{ this.printAddNext(pagination, media, idData, idPagination) }}
                    <li class="pagination-counter">
                        <small>{{ pagination.counter }}</small>
                    </li>
                    <li class="pagination-loader" style="display:none;"><i class="fa fa-refresh fa-spin"></i></li>
                </ul>
            </div>
            {# Admin #}
        {% else %}
            <div class="row" id="{{ idPagination ? idPagination : pagination.idPagination }}">
                <ul class="pagination" data-path="{{ pagination.path }}" data-post="{{ pagination.post }}" data-tag="{{ pagination.tag }}" data-id-data="{{ idData ? idData : pagination.idData }}" data-id-pagination="{{ idPagination ? idPagination : pagination.idPagination }}">
                    {{ this.printAddPrevious(pagination, media, idData, idPagination) }}
                    {% for data in pagination.datas %}
                        {{ this.printAdd(pagination, media, data, idData, idPagination) }}
                    {% endfor %}
                    {{ this.printAddNext(pagination, media, idData, idPagination) }}
                    <li class="pagination-counter">
                        <small>{{ pagination.counter }}</small>
                    </li>
                    <li class="pagination-loader" style="display:none;"><i class="fa fa-refresh fa-spin"></i></li>
                </ul>
            </div>
        {% endif %}
    {% endif %}
{% endmacro %}

{# PAGINATION - Ajouter un élément #}
{% macro printAdd(pagination, media, data, idData, idPagination) %}
    {% set active = data.current ? 0 : 1 %}
    <li class="{{ active == 0 ? 'current' : '' }}">
        <a href="javascript:void(0)"
           {{ media ? 'media' : 'data' }}-pagination="{{ data.page }}"
           data-active="{{ active }}"
           data-path="{{ pagination.path }}"
           data-post="{{ pagination.post }}"
           data-tag="{{ pagination.tag }}"
           data-id-data="{{ idData ? idData : pagination.idData }}"
           data-id-pagination="{{ idPagination ? idPagination : pagination.idPagination }}">
            {{ data.text }}
        </a>
    </li>
{% endmacro %}

{# PAGINATION - Ajouter une flèche précédent #}
{% macro printAddPrevious(pagination, media, idData, idPagination) %}
    {% set active = pagination.current == 1 ? 0 : 1 %}
    <li class="arrow {{ active == 0 ? 'unavailable' : '' }}">
        <a href="javascript:void(0)"
           {{ media ? 'media' : 'data' }}-pagination="{{ pagination.current - 1 }}"
           data-active="{{ active }}"
           data-path="{{ pagination.path }}"
           data-post="{{ pagination.post }}"
           data-tag="{{ pagination.tag }}"
           data-id-data="{{ idData ? idData : pagination.idData }}"
           data-id-pagination="{{ idPagination ? idPagination : pagination.idPagination }}">
            <i class="fa fa-angle-double-left"></i>
        </a>
    </li>
{% endmacro %}

{# PAGINATION - Ajouter une flèche suivant #}
{% macro printAddNext(pagination, media, idData, idPagination) %}
    {% set active = pagination.current == pagination.max ? 0 : 1 %}
    <li class="arrow {{ active == 0 ? 'unavailable' : '' }}">
        <a href="javascript:void(0)"
           {{ media ? 'media' : 'data' }}-pagination="{{ pagination.current + 1 }}"
           data-active="{{ active }}"
           data-path="{{ pagination.path }}"
           data-post="{{ pagination.post }}"
           data-tag="{{ pagination.tag }}"
           data-id-data="{{ idData ? idData : pagination.idData }}"
           data-id-pagination="{{ idPagination ? idPagination : pagination.idPagination }}">
            <i class="fa fa-angle-double-right"></i>
        </a>
    </li>
{% endmacro %}

{# AUTOCOMPLETE - Afficher #}
{% macro autocomplete(pagination, field, text) %}
    {% import _self as this %}
    {% if pagination.max > 0 %}
        <div class="row">
            <ul class="pagination" autocomplete>
                {{ this.autocompleteAddPrevious(pagination, field, text) }}
                {% for data in pagination.datas %}
                    {{ this.autocompleteAdd(data, pagination.path, field, text) }}
                {% endfor %}
                {{ this.autocompleteAddNext(pagination, field, text) }}
                <li class="pagination-counter">{{ pagination.count }}</li>
                <li class="pagination-loader"><i class="fa fa-refresh fa-spin"></i></li>
            </ul>
        </div>
    {% endif %}
{% endmacro %}

{# AUTOCOMPLETE - Ajouter un élément #}
{% macro autocompleteAdd(data, url, field, text) %}
    {% set active = data.current ? 0 : 1 %}
    <li class="{{ active == 0 ? 'current' : '' }}">
        <a href="javascript:void(0)" data-pagination="{{ data.page }}" data-active="{{ active }}" data-field="{{ field }}" data-text="{{ text }}" data-url="{{ url }}">{{ data.text }}</a>
    </li>
{% endmacro %}

{# AUTOCOMPLETE - Ajouter une flèche précédent #}
{% macro autocompleteAddPrevious(data, field, text) %}
    {% set active = data.current == 1 ? 0 : 1 %}
    <li class="arrow {{ active == 0 ? 'unavailable' : '' }}">
        <a href="javascript:void(0)" data-pagination="{{ data.current - 1 }}" data-active="{{ active }}" data-field="{{ field }}" data-text="{{ text }}" data-url="{{ data.path }}"><i class="fa fa-angle-double-left"></i></a>
    </li>
{% endmacro %}

{# AUTOCOMPLETE - Ajouter une flèche suivant #}
{% macro autocompleteAddNext(data, field, text) %}
    {% set active = data.current == data.max ? 0 : 1 %}
    <li class="arrow {{ active == 0 ? 'unavailable' : '' }}">
        <a href="javascript:void(0)" data-pagination="{{ data.current + 1 }}" data-active="{{ active }}" data-field="{{ field }}" data-text="{{ text }}" data-url="{{ data.path }}"><i class="fa fa-angle-double-right"></i></a>
    </li>
{% endmacro %}

